{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "CloudFormation template",
    "Parameters" : {
        "DBPass" : {
          "NoEcho" : "true",
          "Description" : "The database admin account password",
          "Type" : "String",
          "MinLength" : "1",
          "MaxLength" : "41",
          "AllowedPattern" : "[a-zA-Z0-9]*"
        },
        "GithubToken" : {
          "NoEcho" : "true",
          "Description" : "Oauth token for Github",
          "Type" : "String"
        }
    },
    "Mappings" : {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "PV64"   },
            "t2.micro"    : { "Arch" : "HVM64"  },
            "t2.small"    : { "Arch" : "HVM64"  },
            "t2.medium"   : { "Arch" : "HVM64"  },
            "m1.small"    : { "Arch" : "PV64"   },
            "m1.medium"   : { "Arch" : "PV64"   },
            "m1.large"    : { "Arch" : "PV64"   },
            "m1.xlarge"   : { "Arch" : "PV64"   },
            "m2.xlarge"   : { "Arch" : "PV64"   },
            "m2.2xlarge"  : { "Arch" : "PV64"   },
            "m2.4xlarge"  : { "Arch" : "PV64"   },
            "m3.medium"   : { "Arch" : "HVM64"  },
            "m3.large"    : { "Arch" : "HVM64"  },
            "m3.xlarge"   : { "Arch" : "HVM64"  },
            "m3.2xlarge"  : { "Arch" : "HVM64"  },
            "c1.medium"   : { "Arch" : "PV64"   },
            "c1.xlarge"   : { "Arch" : "PV64"   },
            "c3.large"    : { "Arch" : "HVM64"  },
            "c3.xlarge"   : { "Arch" : "HVM64"  },
            "c3.2xlarge"  : { "Arch" : "HVM64"  },
            "c3.4xlarge"  : { "Arch" : "HVM64"  },
            "c3.8xlarge"  : { "Arch" : "HVM64"  },
            "c4.large"    : { "Arch" : "HVM64"  },
            "c4.xlarge"   : { "Arch" : "HVM64"  },
            "c4.2xlarge"  : { "Arch" : "HVM64"  },
            "c4.4xlarge"  : { "Arch" : "HVM64"  },
            "c4.8xlarge"  : { "Arch" : "HVM64"  },
            "g2.2xlarge"  : { "Arch" : "HVMG2"  },
            "r3.large"    : { "Arch" : "HVM64"  },
            "r3.xlarge"   : { "Arch" : "HVM64"  },
            "r3.2xlarge"  : { "Arch" : "HVM64"  },
            "r3.4xlarge"  : { "Arch" : "HVM64"  },
            "r3.8xlarge"  : { "Arch" : "HVM64"  },
            "i2.xlarge"   : { "Arch" : "HVM64"  },
            "i2.2xlarge"  : { "Arch" : "HVM64"  },
            "i2.4xlarge"  : { "Arch" : "HVM64"  },
            "i2.8xlarge"  : { "Arch" : "HVM64"  },
            "d2.xlarge"   : { "Arch" : "HVM64"  },
            "d2.2xlarge"  : { "Arch" : "HVM64"  },
            "d2.4xlarge"  : { "Arch" : "HVM64"  },
            "d2.8xlarge"  : { "Arch" : "HVM64"  },
            "hi1.4xlarge" : { "Arch" : "HVM64"  },
            "hs1.8xlarge" : { "Arch" : "HVM64"  },
            "cr1.8xlarge" : { "Arch" : "HVM64"  },
            "cc2.8xlarge" : { "Arch" : "HVM64"  }
        }
    },
    "Resources" : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" :
            {
                "CidrBlock" : "10.0.0.0/16"
            }
        },
        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" :  "VPC" }
            }
        },
        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "IGW" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },
        "PrivateRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" :  "VPC" }
            }
        },
        "PrivateRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "InstanceId" : { "Ref" : "NAT" },
                "RouteTableId" : { "Ref" : "PrivateRouteTable" }
            }
        },
        "IGW" : {
            "Type" : "AWS::EC2::InternetGateway"
        },
        "GatewayToInternet" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : { "Ref" :  "IGW" },
                "VpcId" : { "Ref" :  "VPC" }
            }
        },
        "PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" :
            {
                "AvailabilityZone" : "us-east-1b",
                "CidrBlock" : "10.0.0.0/24",
                "VpcId" : { "Ref" :  "VPC" },
                "MapPublicIpOnLaunch" : "true"
            }
        },
        "PublicSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "SubnetId" : { "Ref" : "PublicSubnet1" }
            }
        },
        "PublicSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" :
            {
                "AvailabilityZone" : "us-east-1c",
                "CidrBlock" : "10.0.1.0/24",
                "VpcId" : { "Ref" :  "VPC" },
                "MapPublicIpOnLaunch" : "true"
            }
        },
        "PublicSubnet2RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "SubnetId" : { "Ref" : "PublicSubnet2" }
            }
        },
        "PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" :
            {
                "AvailabilityZone" : "us-east-1b",
                "CidrBlock" : "10.0.2.0/24",
                "VpcId" : { "Ref" :  "VPC" }
            }
        },
        "PrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "SubnetId" : { "Ref" : "PrivateSubnet1" }
            }
        },
        "PrivateSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" :
            {
                "AvailabilityZone" : "us-east-1c",
                "CidrBlock" : "10.0.3.0/24",
                "VpcId" : { "Ref" :  "VPC" }
            }
        },
        "PrivateSubnet2RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "SubnetId" : { "Ref" : "PrivateSubnet2" }
            }
        },
        "NAT" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" :
            {
                "ImageId" : "ami-184dc970",
                "InstanceType" : "t2.micro",
                "SourceDestCheck" : "false",
                "SubnetId" : { "Ref" : "PublicSubnet1" },
                "SecurityGroupIds" : [{ "Ref" : "WebServerSecurityGroup" }]
            }
        },
        "WebServerSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable internal access to the NAT device",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
                    { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
                ]
            }
        },
        "ElasticBeanstalkApplication" : {
            "Type" : "AWS::ElasticBeanstalk::Application",
            "DependsOn" : "NAT",
            "Properties" : {
               "ApplicationName" : "irish-tide-times"
            }
        },
        "ProdEnv" : {
            "Type" : "AWS::ElasticBeanstalk::Environment",
            "Properties" : {
               "ApplicationName" : { "Ref" : "ElasticBeanstalkApplication" },
               "SolutionStackName" : "64bit Amazon Linux 2015.09 v2.0.4 running PHP 5.6",
               "EnvironmentName": "ittProdEnv",
               "OptionSettings" : [
                          {"Namespace" : "aws:ec2:vpc", "OptionName" : "VPCId", "Value" : { "Ref" : "VPC" }},
                          {"Namespace" : "aws:ec2:vpc", "OptionName" : "Subnets", "Value" : { "Fn::Join" : [ ",", [ { "Ref": "PublicSubnet1" }, {"Ref": "PublicSubnet2"} ] ] } },
                          {"Namespace" : "aws:ec2:vpc", "OptionName" : "ELBSubnets", "Value" : { "Fn::Join" : [ ",", [ { "Ref": "PublicSubnet1" }, {"Ref": "PublicSubnet2"} ] ] } },
                          {
                             "Namespace" : "aws:autoscaling:launchconfiguration",
                             "OptionName" : "EC2KeyName",
                             "Value" : "id_rsa"
                          },
                          {
                            "Namespace": "aws:elasticbeanstalk:application:environment",
                            "OptionName": "DB_HOST",
                            "Value": {
                              "Fn::GetAtt" : [ "DB" , "Endpoint.Address" ]
                            }
                          },
                          {
                             "Namespace" : "aws:autoscaling:launchconfiguration",
                             "OptionName" : "EC2KeyName",
                             "Value" : "id_rsa"
                          },
                          {
                            "Namespace": "aws:elasticbeanstalk:application:environment",
                            "OptionName": "RDS_USER",
                            "Value": "itt"
                          }
               ]
            }
        },
        "DB" : {
           "Type" : "AWS::RDS::DBInstance",
           "Properties" : {
              "AllocatedStorage" : "10",
              "DBName" : "itt",
              "DBInstanceClass" : "db.t2.micro",
              "Engine" : "MySQL",
              "EngineVersion" : "5.6",
              "MasterUsername" : "itt",
              "MasterUserPassword" : { "Ref" : "DBPass" }
           }
        },
        "CodePipelineS3Bucket" : {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "VersioningConfiguration" : { "Status" : "Enabled" }
            }
        },
        "CodePipelineServiceRole": {
                 "Type": "AWS::IAM::Role",
                 "Properties": {
                    "AssumeRolePolicyDocument": {
                       "Version" : "2012-10-17",
                       "Statement": [ {
                          "Effect": "Allow",
                          "Principal": {
                             "Service": [ "codepipeline.amazonaws.com" ]
                          },
                          "Action": [ "sts:AssumeRole" ]
                       } ]
                    },
                    "Path": "/",
                    "Policies": [ {
                       "PolicyName": "xgpCodePipelineServiceRole",
                       "PolicyDocument": {
                          "Version" : "2012-10-17",
                          "Statement": [
                              {
                                "Action": [
                                  "s3:GetObject",
                                  "s3:GetObjectVersion",
                                  "s3:GetBucketVersioning"
                                ],
                                "Resource": "*",
                                "Effect": "Allow"
                              },
                              {
                                "Action": [
                                  "s3:PutObject"
                                ],
                                "Resource": [
                                  "arn:aws:s3:::codepipeline*",
                                  "arn:aws:s3:::elasticbeanstalk*"
                                ],
                                "Effect": "Allow"
                              },
                              {
                                "Action": [
                                  "codedeploy:CreateDeployment",
                                  "codedeploy:GetApplicationRevision",
                                  "codedeploy:GetDeployment",
                                  "codedeploy:GetDeploymentConfig",
                                  "codedeploy:RegisterApplicationRevision"
                                ],
                                "Resource": "*",
                                "Effect": "Allow"
                              },
                              {
                                "Action": [
                                  "elasticbeanstalk:*",
                                  "ec2:*",
                                  "elasticloadbalancing:*",
                                  "autoscaling:*",
                                  "cloudwatch:*",
                                  "s3:*",
                                  "sns:*",
                                  "cloudformation:*",
                                  "rds:*",
                                  "sqs:*",
                                  "ecs:*",
                                  "iam:PassRole"
                                ],
                                "Resource": "*",
                                "Effect": "Allow"
                              },
                              {
                                "Action": [
                                  "lambda:InvokeFunction",
                                  "lambda:ListFunctions"
                                ],
                                "Resource": "*",
                                "Effect": "Allow"
                              }
                            ]
                       }
                       } ]
                    }
              },
          "AppPipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "DependsOn" : "ProdEnv",
            "Properties": {
              "RoleArn": { "Fn::GetAtt" : [ "CodePipelineServiceRole", "Arn" ] },
              "Stages": [
                {
                  "Name": "Source",
                  "Actions": [
                    {
                      "Name": "SourceAction",
                      "ActionTypeId": {
                        "Category": "Source",
                        "Owner": "ThirdParty",
                        "Version": "1",
                        "Provider": "GitHub"
                      },
                      "OutputArtifacts": [
                        {
                          "Name": "SourceOutput"
                        }
                      ],
                      "Configuration": {
                        "Owner" : "sandeel",
                        "Repo" : "irish-tide-times",
                        "Branch" : "master",
                        "OAuthToken" : "7bd24b616f69894001169c0c897a31e225b7cc0f"
                      },
                      "RunOrder": 1
                    }
                  ]
                },
                {
                  "Name": "Prod",
                  "Actions": [
                    {
                      "Name": "ProdAction",
                      "InputArtifacts": [
                        {
                          "Name": "SourceOutput"
                        }
                      ],
                      "ActionTypeId": {
                        "Category": "Deploy",
                        "Owner": "AWS",
                        "Version": "1",
                        "Provider": "ElasticBeanstalk"
                      },
                      "Configuration": {
                        "ApplicationName": {"Ref" : "ElasticBeanstalkApplication"},
                        "EnvironmentName" : { "Ref" : "ProdEnv" }
                      },
                      "RunOrder": 1
                    }
                  ]
                }
              ],
              "ArtifactStore": {
                "Type": "S3",
                "Location": { "Ref" : "CodePipelineS3Bucket" }
              },
              "DisableInboundStageTransitions": [
                {
                  "StageName": "Prod",
                  "Reason": "Disabling the transition until integration tests are completed"
                }
              ]
            }
          }
    }
}
